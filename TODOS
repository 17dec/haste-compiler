* We need to generate our own variable names and keep a symbol table for
  codegen, since JS doesn't have sane scoping rules. Since variables are SSA,
  we should also keep track of whether the variable contains a thunk or
  a value, and perhaps other similarly interesting things, in said table.
  [critical/easy]

* Implement link step, stitching all compiled modules together and dumping
  the code to a .js file.
  [important/easy]

* Add user dirs for compiled libraries, and a compiler flag to install code
  into those dirs, as unlinked files, rather than link and dump to the current
  working dir.
  [nice to have/easy]

* Implement runtime library.
  [critical/easy]

* Generate primops as JS ops rather than function calls. Also look into
  generating certain ops on the lifted numeric types in pure JS to save space.
  [critical/easy]

* Fix foreign calls.
  [important/could require some work]

* Look into rewriting as much of the base libraries as possible in pure JS;
  huge space savings are likely!
  [nice to have/hard work]

* Get IO working.
  [important/should be easy]

* Implement tail call elimination using trampolining.
  [important/medium]

* Implement tail recursion as loops.
  [nice to have/easy after general tail calls]
